variables: &global-variables
  ARTIFACTORY_REPO: kluster
  APTLY_REPO: sintef-testing
  APTLY_DIST: buster
  APTLY_COMP: testing
  OSPL_HOME: /opt/opensplice-hde

stages:
  - builder_build
  - build
  - test
  - deploy
  - test_repo

.armhfspec:
  image: ${KLUSTER_REGISTRY_URL}/sinspekto/builder/buster/armhf

.amd64spec:
  image: ${KLUSTER_REGISTRY_URL}/sinspekto/builder/buster/amd64

#=========================================
# Docker image runner spawns job within
#=========================================

.builder_build:buster:
  image: docker:19.03.8
  stage: builder_build
  script:
    - >
       ARCH=`uname -m` &&
       if [ "$ARCH" == "x86_64" ]; then
       ARCHITECTURE="amd64";
       elif [ "$ARCH" == "armv7l" ]; then
       ARCHITECTURE="armhf";
       elif [ "$ARCH" == "arm64" ]; then
       ARCHITECTURE="arm64";
       else
       ARCHITECTURE="${ARCH}";
       fi
    - >
       docker build -f tools/docker/gitlab-builder.df -t sinspekto/builder/buster/${ARCHITECTURE}
       --target gitlab-builder
       --build-arg APTLY_USR=${KLUSTER_APTLY_USER}
       --build-arg APTLY_PWD=${KLUSTER_APTLY_PASSWORD}
       --build-arg APTLY_URL=${KLUSTER_APTLY_URL}
       --build-arg APTLY_PREFIX=/${APTLY_REPO}
       --build-arg APTLY_DIST=${APTLY_DIST}
       --build-arg APTLY_COMP=${APTLY_COMP}
       --build-arg CACHE_BUST=$(date +%Y%m%d-%H%M%S)
       .
    - docker login -u ${KLUSTER_REGISTRY_USER} -p ${KLUSTER_REGISTRY_PASSWORD} ${KLUSTER_REGISTRY_URL}
    - docker tag sinspekto/builder/buster/${ARCHITECTURE} ${KLUSTER_REGISTRY_URL}/sinspekto/builder/buster/${ARCHITECTURE}
    - docker push ${KLUSTER_REGISTRY_URL}/sinspekto/builder/buster/${ARCHITECTURE}
  rules:
    - changes:
      - tools/docker/gitlab-builder.df
    - if: '$CI_COMMIT_MESSAGE =~ /.*build builder.*/i'

builder_build:buster:armhf:
  extends: .builder_build:buster
  tags:
    - armhf

builder_build:buster:amd64:
  extends: .builder_build:buster
  tags:
    - amd64

#=========================================
# Build and deploy with Conan
#=========================================

build:conan:amd64:
  image: conanio/gcc8
  stage: build
  variables:
    <<: *global-variables
    CONAN_SYSREQUIRES_MODE: enabled
    CONAN_SYSREQUIRES_SUDO: 1
    CONAN_NON_INTERACTIVE: 1
    CONAN_LOGIN_USERNAME: ${KLUSTER_ARTIFACTORY_USER}
    CONAN_PASSWORD: ${KLUSTER_ARTIFACTORY_PASSWORD}
    KLUSTER_REMOTE: ${KLUSTER_ARTIFACTORY_URL}/artifactory/api/conan/conan-local
  script:
    - sudo pip install --upgrade pip setuptools wheel
    - sudo pip install --upgrade conan
    - sudo apt-get update
    - sudo apt-get upgrade -y
    - sudo apt-get install -y doxygen graphviz plantuml wget
    - sudo pip install -r docs/requirements.txt --upgrade
    - echo "To work around pesky gnutls issue Emacs, install newer emacs"
    - sudo apt-get install -y software-properties-common
    - sudo add-apt-repository -y ppa:kelleyk/emacs
    - sudo apt-get update && sudo apt-get install -y emacs26-nox
    - sudo update-alternatives --set emacs /usr/bin/emacs26
    - echo "Workaround steps complete"
    - sudo emacs -Q --batch -l docs/emacs-install-pkgs.el
    - wget https://sourceforge.net/projects/plantuml/files/plantuml.jar
    - sudo mv plantuml.jar /usr/share/plantuml/
    - conan remote add kluster http://${KLUSTER_REMOTE}
    - conan remote add sintef https://artifactory.smd.sintef.no/artifactory/api/conan/conan-local
    - conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
    - conan user ${CONAN_LOGIN_USERNAME} -p -r kluster
    - conan profile new default --detect
    - conan profile update settings.compiler.libcxx=libstdc++11 default
    - conan config set general.revisions_enabled=1
    - echo "Preparations done"
    - conan create . kluster/testing -b missing -b sinspekto -o sinspekto:with_examples=True
    - conan create . kluster/testing -b missing -b sinspekto -o qt:qttools=True
    - conan upload --all -c -r kluster qt/* --retry 5 --retry-wait 30
    - conan upload --all -c -r kluster sinspekto/* --retry 5 --retry-wait 20
  tags:
    - amd64

build:conan:win64:
  image: localhost:5000/kluster2004
  stage: build
  variables:
    <<: *global-variables
    CONAN_SYSREQUIRES_MODE: enabled
    CONAN_NON_INTERACTIVE: 1
    CONAN_USE_ALWAYS_SHORT_PATHS: 1
    CONAN_LOGIN_USERNAME: ${KLUSTER_ARTIFACTORY_USER}
    CONAN_PASSWORD: ${KLUSTER_ARTIFACTORY_PASSWORD}
    KLUSTER_REMOTE: ${KLUSTER_ARTIFACTORY_URL}/artifactory/api/conan/conan-local
    DOCKER_CONTAINER: 1
  script:
    - pip install -r docs/requirements.txt --upgrade
    - emacs -Q --batch -l docs/emacs-install-pkgs.el
    - conan remote add kluster http://${KLUSTER_REMOTE}
    - conan remote add sintef https://artifactory.smd.sintef.no/artifactory/api/conan/conan-local
    - conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
    - conan user ${CONAN_LOGIN_USERNAME} -p -r kluster
    - conan config set general.revisions_enabled=1
    - echo "Preparations done"
    - conan create . kluster/testing -b missing -b sinspekto -o sinspekto:with_examples=True
    - conan create . kluster/testing -b missing -b sinspekto -o qt:qttools=True
    - conan upload --all -c -r kluster qt/* --retry 5 --retry-wait 30
    - conan upload --all -c -r kluster sinspekto/* --retry 5 --retry-wait 20
  tags:
    - windows


#=========================================
# Simple build of Release
#=========================================

.build:sinspekto:
  stage: build
  script:
    - python3 -m pip install -r docs/requirements.txt --upgrade
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=1 ..
    - cmake --build . --parallel 4
    - cmake --build . --target doc
  artifacts:
    paths:
      - build/
    expire_in: 3 hrs

build:sinspekto:amd64:
  extends:
    - .build:sinspekto
    - .amd64spec
  tags:
    - amd64

build:sinspekto:armhf:
  extends:
    - .build:sinspekto
    - .armhfspec
  tags:
    - armhf

#=========================================
# Deploy artifacts to artifactory
#=========================================

.artifactory:sinspekto:
  stage: deploy
  variables:
    <<: *global-variables
    ARTIFACTORY_REPO: sintef
  script:
    - >
       ARCH=`uname -m` &&
       if [ "$ARCH" == "x86_64" ]; then
       B_TARGET="docs_deploy";
       else
       B_TARGET="upload";
       fi
    - python3 -m pip install -r docs/requirements.txt --upgrade
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=1 ..
    - cmake --build . --target ${B_TARGET}
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

artifactory:sinspekto:amd64:
  dependencies:
    - build:sinspekto:amd64
  extends:
    - .artifactory:sinspekto
    - .amd64spec
  tags:
    - amd64

artifactory:sinspekto:armhf:
  dependencies:
    - build:sinspekto:armhf
  extends:
    - .artifactory:sinspekto
    - .armhfspec
  tags:
    - armhf

#=========================================
# Deploy packages to aptly xx-testing
#=========================================

.aptly_testing:sinspekto:
  stage: deploy
  variables:
    <<: *global-variables
    APTLY_REPO: sintef-testing
    APTLY_COMP: testing
  script:
    - python3 -m pip install -r docs/requirements.txt --upgrade
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=1 ..
    - cmake --build . --target deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

aptly_testing:sinspekto:amd64:
  dependencies:
    - build:sinspekto:amd64
  extends:
    - .aptly_testing:sinspekto
    - .amd64spec
  tags:
    - amd64

aptly_testing:sinspekto:armhf:
  dependencies:
    - build:sinspekto:armhf
  extends:
    - .aptly_testing:sinspekto
    - .armhfspec
  tags:
    - armhf

#=========================================
# Deploy packages to aptly xx-release
#=========================================

.aptly_release:sinspekto:
  stage: deploy
  variables:
    <<: *global-variables
    APTLY_REPO: sintef-release
    APTLY_COMP: release
  script:
    - python3 -m pip install -r docs/requirements.txt --upgrade
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=1 ..
    - cmake --build . --target deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - if: '$CI_COMMIT_MESSAGE =~ /.deploy release.*/i'

aptly_release:sinspekto:amd64:
  dependencies:
    - build:sinspekto:amd64
  extends:
    - .aptly_release:sinspekto
    - .amd64spec
  tags:
    - amd64

aptly_release:sinspekto:armhf:
  dependencies:
    - build:sinspekto:armhf
  extends:
    - .aptly_release:sinspekto
    - .armhfspec
  tags:
    - armhf
